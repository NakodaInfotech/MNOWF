
Imports BL
Imports System.Windows.Forms
Imports CrystalDecisions.CrystalReports.Engine
Imports System.IO
Imports CrystalDecisions.Shared

Public Class SelectClaimReq

    Public FORMULA As String
    Public edit As Boolean
    Public OFFNAME As String
    Public FRMSTRING As String
    Public DIRECTMAIL As Boolean = False
    Public DIRECTWHATSAPP As Boolean = False
    Dim ROW As Integer = 0
    Public REQNO As Integer
    Dim USERADD, USEREDIT, USERVIEW, USERDELETE As Boolean      'USED FOR RIGHT MANAGEMAENT
    Public DT As New DataTable

    Private Sub cmdexit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdcancel.Click
        Me.Close()
    End Sub

    Private Sub SelectReqforCorres_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles Me.KeyDown
        Try
            If e.KeyCode = Windows.Forms.Keys.Escape Or (e.KeyCode = Keys.X And e.Alt = True) Then
                Me.Close()
            ElseIf e.KeyCode = Keys.Enter Then
                SendKeys.Send("{Tab}")
            ElseIf e.KeyCode = Keys.O And e.Alt = True Then
                cmdok_Click(sender, e)
            End If
        Catch ex As Exception
            If ErrHandle(ex.Message.GetHashCode) = False Then Throw ex
        End Try
    End Sub

    Private Sub SelectReqforCorres_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Try



            If FRMSTRING = "MEDICAL" Then
                fillgrid(" and dbo.MEDCLAIMREQ.REQ_DONE= 'FALSE' and dbo.MEDCLAIMREQ.REQ_CMPID=" & CmpId & " and dbo.MEDCLAIMREQ.REQ_locationid=" & Locationid & " and dbo.MEDCLAIMREQ.REQ_yearid=" & YearId & " order by dbo.MEDCLAIMREQ.REQ_no ")
            ElseIf FRMSTRING = "MEDSUPP" Then
                fillgrid(" and dbo.MEDCLAIMREQ.REQ_DONE= 'TRUE' AND dbo.MEDCLAIMREQ.REQ_SUPPDONE ='FALSE' AND (MEDCLAIMREQ.REQ_CLAIMEDAMT - MEDCLAIMSETTLEMENT.SETTLE_TOTALAMT) > 0 and dbo.MEDCLAIMREQ.REQ_CMPID=" & CmpId & " and dbo.MEDCLAIMREQ.REQ_locationid=" & Locationid & " and dbo.MEDCLAIMREQ.REQ_yearid=" & YearId & " order by dbo.MEDCLAIMREQ.REQ_no ")
            ElseIf FRMSTRING = "EDUCATION" Then
                fillgrid(" and dbo.EDUCLAIMREQ.REQ_DONE ='FALSE' and dbo.EDUCLAIMREQ.REQ_CMPID=" & CmpId & " and dbo.EDUCLAIMREQ.REQ_locationid=" & Locationid & " and dbo.EDUCLAIMREQ.REQ_yearid=" & YearId & " order by dbo.EDUCLAIMREQ.REQ_no ")
            ElseIf FRMSTRING = "EDUSUPP" Then
                fillgrid(" and dbo.EDUCLAIMREQ.REQ_DONE ='TRUE' AND dbo.EDUCLAIMREQ.REQ_SUPPDONE ='FALSE'  AND (EDUCLAIMREQ.REQ_CLAIMEDAMT - EDUCLAIMSETTLEMENT.SETTLE_TOTALAMT) > 0 and dbo.EDUCLAIMREQ.REQ_CMPID=" & CmpId & " and dbo.EDUCLAIMREQ.REQ_locationid=" & Locationid & " and dbo.EDUCLAIMREQ.REQ_yearid=" & YearId & " order by dbo.EDUCLAIMREQ.REQ_no ")
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    Sub fillgrid(ByVal tepmcondition)
        Try
            Dim objclsCMST As New ClsCommonMaster
            Dim dt As DataTable
            If FRMSTRING = "MEDICAL" Then
                dt = objclsCMST.search(" DISTINCT CAST(0 AS BIT) AS CHK, MEDCLAIMREQ.REQ_NO AS SRNO, MEDCLAIMREQ.REQ_DATE AS REQDATE, MEDCLAIMREQ.REQ_INWARDNO AS INWARDNO, ISNULL(SENTBYMASTER.SENTBY_NAME, '') AS SENTBY, MEDCLAIMREQ.REQ_RECDATE AS RECDATE, OFFICERMASTER.OFFICER_name AS NAME, ISNULL(COMPANYMASTER.COMPANY_NAME, '') AS CMPNAME, RANKMASTER.RANK_NAME AS RANK, OFFICERMASTER.OFFICER_EMPCODE AS EMPCODE, OFFICERMASTER.OFFICER_MUINO AS MUINO, MEDCLAIMREQ.REQ_AUTHOFROM AS AUTHOFROM, MEDCLAIMREQ.REQ_AUTHOTO AS AUTHOTO, MEDCLAIMREQ.REQ_DOJ AS DOJ, ISNULL(FAMILYMASTER.FAMILY_NAME, '') AS FAMILY, ISNULL(RELATIONMASTER.RELATION_NAME, '') AS RELATION, ISNULL(MEDCLAIMREQ.REQ_DIAGNOSIS, '') AS DIAGNOSIS, ISNULL(MEDCLAIMREQ.REQ_HOSPNAME, '') AS HOSPNAME, ISNULL(MEDCLAIMREQ.REQ_HOSPADD, '') AS HOSPADD, ISNULL(MEDCLAIMREQ.REQ_DRNAME, '') AS DRNAME, ISNULL(MEDCLAIMREQ.REQ_BANK, '') AS BANK, ISNULL(MEDCLAIMREQ.REQ_BRANCH, '') AS BRANCH, ISNULL(MEDCLAIMREQ.REQ_ACNAME, '') AS ACNAME, ISNULL(MEDCLAIMREQ.REQ_ACNO, '') AS ACNO, ISNULL(MEDCLAIMREQ.REQ_BANKADD, '') AS BANKADD, ISNULL(MEDCLAIMREQ.REQ_REMARKS, '') AS REMARKS, MEDCLAIMREQ.REQ_CLAIMEDAMT AS CLAIMAMT, MEDCLAIMREQ.REQ_DONE AS DONE, CATEGORYMASTER.CATEGORY_NAME AS CATEGORY, ISNULL(VESSEL_NAME,'') AS VESSEL, ISNULL(MEDCLAIMREQ.REQ_IFSCCODE,'') AS IFSCCODE, MEDCLAIMREQ.REQ_ILLFROM AS ILLFROM, MEDCLAIMREQ.REQ_ILLTO AS ILLTO", "", "  CATEGORYMASTER INNER JOIN MEDCLAIMREQ_DESC ON CATEGORYMASTER.CATEGORY_ID = MEDCLAIMREQ_DESC.REQ_CATEGORYID AND CATEGORYMASTER.CATEGORY_CMPID = MEDCLAIMREQ_DESC.REQ_CMPID AND CATEGORYMASTER.CATEGORY_LOCATIONID = MEDCLAIMREQ_DESC.REQ_LOCATIONID AND CATEGORYMASTER.CATEGORY_YEARID = MEDCLAIMREQ_DESC.REQ_YEARID RIGHT OUTER JOIN MEDCLAIMREQ INNER JOIN OFFICERMASTER ON MEDCLAIMREQ.REQ_OFFICERID = OFFICERMASTER.OFFICER_id AND MEDCLAIMREQ.REQ_CMPID = OFFICERMASTER.OFFICER_cmpid AND MEDCLAIMREQ.REQ_LOCATIONID = OFFICERMASTER.OFFICER_locationid AND MEDCLAIMREQ.REQ_YEARID = OFFICERMASTER.OFFICER_yearid INNER JOIN OFFICERMASTER_DESC ON OFFICERMASTER.OFFICER_cmpid = OFFICERMASTER_DESC.OFFICER_CMPID AND OFFICERMASTER.OFFICER_locationid = OFFICERMASTER_DESC.OFFICER_locationid AND OFFICERMASTER.OFFICER_yearid = OFFICERMASTER_DESC.OFFICER_yearid AND OFFICERMASTER.OFFICER_id = OFFICERMASTER_DESC.OFFICER_ID INNER JOIN FAMILYMASTER ON MEDCLAIMREQ.REQ_FAMILYID = FAMILYMASTER.FAMILY_ID AND OFFICERMASTER_DESC.OFFICER_FAMILYID = FAMILYMASTER.FAMILY_ID AND OFFICERMASTER_DESC.OFFICER_CMPID = FAMILYMASTER.FAMILY_CMPID AND OFFICERMASTER_DESC.OFFICER_locationid = FAMILYMASTER.FAMILY_LOCATIONID AND OFFICERMASTER_DESC.OFFICER_yearid = FAMILYMASTER.FAMILY_YEARID AND MEDCLAIMREQ.REQ_CMPID = FAMILYMASTER.FAMILY_CMPID AND MEDCLAIMREQ.REQ_LOCATIONID = FAMILYMASTER.FAMILY_LOCATIONID AND MEDCLAIMREQ.REQ_YEARID = FAMILYMASTER.FAMILY_YEARID INNER JOIN RELATIONMASTER ON OFFICERMASTER_DESC.OFFICER_RELATIONID = RELATIONMASTER.RELATION_ID AND OFFICERMASTER_DESC.OFFICER_CMPID = RELATIONMASTER.RELATION_CMPID AND OFFICERMASTER_DESC.OFFICER_locationid = RELATIONMASTER.RELATION_LOCATIONID AND OFFICERMASTER_DESC.OFFICER_yearid = RELATIONMASTER.RELATION_YEARID INNER JOIN RANKMASTER ON OFFICERMASTER.OFFICER_RANKID = RANKMASTER.RANK_ID AND OFFICERMASTER.OFFICER_cmpid = RANKMASTER.RANK_CMPID AND OFFICERMASTER.OFFICER_locationid = RANKMASTER.RANK_LOCATIONID AND OFFICERMASTER.OFFICER_yearid = RANKMASTER.RANK_YEARID INNER JOIN COMPANYMASTER ON OFFICERMASTER.OFFICER_COMPANYID = COMPANYMASTER.COMPANY_ID AND OFFICERMASTER.OFFICER_cmpid = COMPANYMASTER.COMPANY_CMPID AND OFFICERMASTER.OFFICER_locationid = COMPANYMASTER.COMPANY_LOCATIONID AND OFFICERMASTER.OFFICER_yearid = COMPANYMASTER.COMPANY_YEARID ON MEDCLAIMREQ_DESC.REQ_NO = MEDCLAIMREQ.REQ_NO AND MEDCLAIMREQ_DESC.REQ_CMPID = MEDCLAIMREQ.REQ_CMPID AND MEDCLAIMREQ_DESC.REQ_LOCATIONID = MEDCLAIMREQ.REQ_LOCATIONID AND MEDCLAIMREQ_DESC.REQ_YEARID = MEDCLAIMREQ.REQ_YEARID LEFT OUTER JOIN SENTBYMASTER ON MEDCLAIMREQ.REQ_YEARID = SENTBYMASTER.SENTBY_YEARID AND MEDCLAIMREQ.REQ_LOCATIONID = SENTBYMASTER.SENTBY_LOCATIONID AND MEDCLAIMREQ.REQ_CMPID = SENTBYMASTER.SENTBY_CMPID AND MEDCLAIMREQ.REQ_SENTBYID = SENTBYMASTER.SENTBY_ID LEFT OUTER JOIN VESSELMASTER ON MEDCLAIMREQ.REQ_VESSELID = VESSELMASTER.VESSEL_ID ", tepmcondition)
            ElseIf FRMSTRING = "MEDSUPP" Then
                dt = objclsCMST.search(" DISTINCT CAST(0 AS BIT) AS CHK, MEDCLAIMREQ.REQ_NO AS SRNO, MEDCLAIMREQ.REQ_DATE AS REQDATE, MEDCLAIMREQ.REQ_INWARDNO AS INWARDNO, ISNULL(SENTBYMASTER.SENTBY_NAME, '') AS SENTBY, MEDCLAIMREQ.REQ_RECDATE AS RECDATE, OFFICERMASTER.OFFICER_name AS NAME, ISNULL(COMPANYMASTER.COMPANY_NAME, '') AS CMPNAME, RANKMASTER.RANK_NAME AS RANK, OFFICERMASTER.OFFICER_EMPCODE AS EMPCODE, OFFICERMASTER.OFFICER_MUINO AS MUINO, MEDCLAIMREQ.REQ_AUTHOFROM AS AUTHOFROM, MEDCLAIMREQ.REQ_AUTHOTO AS AUTHOTO, MEDCLAIMREQ.REQ_DOJ AS DOJ, ISNULL(FAMILYMASTER.FAMILY_NAME, '') AS FAMILY, ISNULL(RELATIONMASTER.RELATION_NAME, '') AS RELATION, ISNULL(MEDCLAIMREQ.REQ_DIAGNOSIS, '') AS DIAGNOSIS, ISNULL(MEDCLAIMREQ.REQ_HOSPNAME, '') AS HOSPNAME, ISNULL(MEDCLAIMREQ.REQ_HOSPADD, '') AS HOSPADD, ISNULL(MEDCLAIMREQ.REQ_DRNAME, '') AS DRNAME, ISNULL(MEDCLAIMREQ.REQ_BANK, '') AS BANK, ISNULL(MEDCLAIMREQ.REQ_BRANCH, '') AS BRANCH, ISNULL(MEDCLAIMREQ.REQ_ACNAME, '') AS ACNAME, ISNULL(MEDCLAIMREQ.REQ_ACNO, '') AS ACNO, ISNULL(MEDCLAIMREQ.REQ_BANKADD, '') AS BANKADD, ISNULL(MEDCLAIMREQ.REQ_REMARKS, '') AS REMARKS, (MEDCLAIMREQ.REQ_CLAIMEDAMT - MEDCLAIMSETTLEMENT.SETTLE_TOTALAMT) AS CLAIMAMT, MEDCLAIMREQ.REQ_DONE AS DONE, CATEGORYMASTER.CATEGORY_NAME AS CATEGORY, ISNULL(VESSEL_NAME,'') AS VESSEL, ISNULL(MEDCLAIMREQ.REQ_IFSCCODE,'') AS IFSCCODE, MEDCLAIMREQ.REQ_ILLFROM AS ILLFROM, MEDCLAIMREQ.REQ_ILLTO AS ILLTO", "", "  MEDCLAIMSETTLEMENT INNER JOIN MEDCLAIMREQ INNER JOIN OFFICERMASTER ON MEDCLAIMREQ.REQ_OFFICERID = OFFICERMASTER.OFFICER_id AND MEDCLAIMREQ.REQ_CMPID = OFFICERMASTER.OFFICER_cmpid AND MEDCLAIMREQ.REQ_LOCATIONID = OFFICERMASTER.OFFICER_locationid AND MEDCLAIMREQ.REQ_YEARID = OFFICERMASTER.OFFICER_yearid INNER JOIN OFFICERMASTER_DESC ON OFFICERMASTER.OFFICER_cmpid = OFFICERMASTER_DESC.OFFICER_CMPID AND OFFICERMASTER.OFFICER_locationid = OFFICERMASTER_DESC.OFFICER_locationid AND OFFICERMASTER.OFFICER_yearid = OFFICERMASTER_DESC.OFFICER_yearid AND OFFICERMASTER.OFFICER_id = OFFICERMASTER_DESC.OFFICER_ID INNER JOIN FAMILYMASTER ON MEDCLAIMREQ.REQ_FAMILYID = FAMILYMASTER.FAMILY_ID AND OFFICERMASTER_DESC.OFFICER_FAMILYID = FAMILYMASTER.FAMILY_ID AND OFFICERMASTER_DESC.OFFICER_CMPID = FAMILYMASTER.FAMILY_CMPID AND OFFICERMASTER_DESC.OFFICER_locationid = FAMILYMASTER.FAMILY_LOCATIONID AND OFFICERMASTER_DESC.OFFICER_yearid = FAMILYMASTER.FAMILY_YEARID AND MEDCLAIMREQ.REQ_CMPID = FAMILYMASTER.FAMILY_CMPID AND MEDCLAIMREQ.REQ_LOCATIONID = FAMILYMASTER.FAMILY_LOCATIONID AND MEDCLAIMREQ.REQ_YEARID = FAMILYMASTER.FAMILY_YEARID INNER JOIN RELATIONMASTER ON OFFICERMASTER_DESC.OFFICER_RELATIONID = RELATIONMASTER.RELATION_ID AND OFFICERMASTER_DESC.OFFICER_CMPID = RELATIONMASTER.RELATION_CMPID AND OFFICERMASTER_DESC.OFFICER_locationid = RELATIONMASTER.RELATION_LOCATIONID AND OFFICERMASTER_DESC.OFFICER_yearid = RELATIONMASTER.RELATION_YEARID INNER JOIN RANKMASTER ON OFFICERMASTER.OFFICER_RANKID = RANKMASTER.RANK_ID AND OFFICERMASTER.OFFICER_cmpid = RANKMASTER.RANK_CMPID AND OFFICERMASTER.OFFICER_locationid = RANKMASTER.RANK_LOCATIONID AND OFFICERMASTER.OFFICER_yearid = RANKMASTER.RANK_YEARID INNER JOIN COMPANYMASTER ON OFFICERMASTER.OFFICER_COMPANYID = COMPANYMASTER.COMPANY_ID AND OFFICERMASTER.OFFICER_cmpid = COMPANYMASTER.COMPANY_CMPID AND OFFICERMASTER.OFFICER_locationid = COMPANYMASTER.COMPANY_LOCATIONID AND OFFICERMASTER.OFFICER_yearid = COMPANYMASTER.COMPANY_YEARID ON MEDCLAIMSETTLEMENT.SETTLE_REQNO = MEDCLAIMREQ.REQ_NO AND MEDCLAIMSETTLEMENT.SETTLE_CMPID = MEDCLAIMREQ.REQ_CMPID AND MEDCLAIMSETTLEMENT.SETTLE_LOCATIONID = MEDCLAIMREQ.REQ_LOCATIONID AND MEDCLAIMSETTLEMENT.SETTLE_YEARID = MEDCLAIMREQ.REQ_YEARID LEFT OUTER JOIN CATEGORYMASTER INNER JOIN MEDCLAIMREQ_DESC ON CATEGORYMASTER.CATEGORY_ID = MEDCLAIMREQ_DESC.REQ_CATEGORYID AND CATEGORYMASTER.CATEGORY_CMPID = MEDCLAIMREQ_DESC.REQ_CMPID AND CATEGORYMASTER.CATEGORY_LOCATIONID = MEDCLAIMREQ_DESC.REQ_LOCATIONID AND CATEGORYMASTER.CATEGORY_YEARID = MEDCLAIMREQ_DESC.REQ_YEARID ON MEDCLAIMREQ.REQ_NO = MEDCLAIMREQ_DESC.REQ_NO AND MEDCLAIMREQ.REQ_CMPID = MEDCLAIMREQ_DESC.REQ_CMPID AND MEDCLAIMREQ.REQ_LOCATIONID = MEDCLAIMREQ_DESC.REQ_LOCATIONID AND MEDCLAIMREQ.REQ_YEARID = MEDCLAIMREQ_DESC.REQ_YEARID LEFT OUTER JOIN SENTBYMASTER ON MEDCLAIMREQ.REQ_YEARID = SENTBYMASTER.SENTBY_YEARID AND MEDCLAIMREQ.REQ_LOCATIONID = SENTBYMASTER.SENTBY_LOCATIONID AND MEDCLAIMREQ.REQ_CMPID = SENTBYMASTER.SENTBY_CMPID AND MEDCLAIMREQ.REQ_SENTBYID = SENTBYMASTER.SENTBY_ID  LEFT OUTER JOIN VESSELMASTER ON MEDCLAIMREQ.REQ_VESSELID = VESSELMASTER.VESSEL_ID", tepmcondition)
            ElseIf FRMSTRING = "EDUCATION" Then
                dt = objclsCMST.search(" DISTINCT CAST(0 AS BIT) AS CHK, EDUCLAIMREQ.REQ_NO AS SRNO, EDUCLAIMREQ.REQ_DATE AS REQDATE, EDUCLAIMREQ.REQ_INWARDNO AS INWARDNO, ISNULL(SENTBYMASTER.SENTBY_NAME, '') AS SENTBY, EDUCLAIMREQ.REQ_RECDATE AS RECDATE, OFFICERMASTER.OFFICER_name AS NAME, ISNULL(COMPANYMASTER.COMPANY_NAME, '') AS CMPNAME, RANKMASTER.RANK_NAME AS RANK, OFFICERMASTER.OFFICER_EMPCODE AS EMPCODE, OFFICERMASTER.OFFICER_MUINO AS MUINO, EDUCLAIMREQ.REQ_LEAVEFROM AS LEAVEFROM, EDUCLAIMREQ.REQ_LEAVETO AS LEAVETO, EDUCLAIMREQ.REQ_DOJ AS DOJ, ISNULL(FAMILYMASTER.FAMILY_NAME, '') AS FAMILY, ISNULL(RELATIONMASTER.RELATION_NAME, '') AS RELATION, ISNULL(COURSEMASTER.COURSE_NAME, '') AS COURSE, ISNULL(COURSEYEARMASTER.COURSEYEAR_NAME, '') AS COURSEYEAR,  ISNULL(EDUCLAIMREQ.REQ_INSTNAME, '') AS INSTNAME, ISNULL(EDUCLAIMREQ.REQ_UNIADD, '') AS UNIADD, ISNULL(EDUCLAIMREQ.REQ_UNINAME, '') AS UNINAME, ISNULL(EDUCLAIMREQ.REQ_BANK, '') AS BANK, ISNULL(EDUCLAIMREQ.REQ_BRANCH, '') AS BRANCH, ISNULL(EDUCLAIMREQ.REQ_ACNAME, '') AS ACNAME, ISNULL(EDUCLAIMREQ.REQ_ACNO, '') AS ACNO, ISNULL(EDUCLAIMREQ.REQ_BANKADD, '') AS BANKADD, ISNULL(EDUCLAIMREQ.REQ_REMARKS, '') AS REMARKS, EDUCLAIMREQ.REQ_CLAIMEDAMT AS CLAIMAMT,   EDUCLAIMREQ.REQ_DONE AS DONE, CATEGORYMASTER.CATEGORY_NAME AS CATEGORY, ISNULL(VESSEL_NAME,'') AS VESSEL, ISNULL(EDUCLAIMREQ.REQ_IFSCCODE,'') AS IFSCCODE ", "", "    EDUCLAIMREQ INNER JOIN OFFICERMASTER ON EDUCLAIMREQ.REQ_OFFICERID = OFFICERMASTER.OFFICER_id AND EDUCLAIMREQ.REQ_CMPID = OFFICERMASTER.OFFICER_cmpid AND EDUCLAIMREQ.REQ_LOCATIONID = OFFICERMASTER.OFFICER_locationid AND EDUCLAIMREQ.REQ_YEARID = OFFICERMASTER.OFFICER_yearid INNER JOIN OFFICERMASTER_DESC ON OFFICERMASTER.OFFICER_cmpid = OFFICERMASTER_DESC.OFFICER_CMPID AND OFFICERMASTER.OFFICER_locationid = OFFICERMASTER_DESC.OFFICER_locationid AND OFFICERMASTER.OFFICER_yearid = OFFICERMASTER_DESC.OFFICER_yearid AND OFFICERMASTER.OFFICER_id = OFFICERMASTER_DESC.OFFICER_ID INNER JOIN FAMILYMASTER ON EDUCLAIMREQ.REQ_FAMILYID = FAMILYMASTER.FAMILY_ID AND OFFICERMASTER_DESC.OFFICER_FAMILYID = FAMILYMASTER.FAMILY_ID AND OFFICERMASTER_DESC.OFFICER_CMPID = FAMILYMASTER.FAMILY_CMPID AND OFFICERMASTER_DESC.OFFICER_locationid = FAMILYMASTER.FAMILY_LOCATIONID AND OFFICERMASTER_DESC.OFFICER_yearid = FAMILYMASTER.FAMILY_YEARID AND EDUCLAIMREQ.REQ_CMPID = FAMILYMASTER.FAMILY_CMPID AND EDUCLAIMREQ.REQ_LOCATIONID = FAMILYMASTER.FAMILY_LOCATIONID AND EDUCLAIMREQ.REQ_YEARID = FAMILYMASTER.FAMILY_YEARID LEFT OUTER JOIN COURSEMASTER ON EDUCLAIMREQ.REQ_COURSEID = COURSEMASTER.COURSE_ID AND EDUCLAIMREQ.REQ_CMPID = COURSEMASTER.COURSE_CMPID AND EDUCLAIMREQ.REQ_LOCATIONID = COURSEMASTER.COURSE_LOCATIONID AND EDUCLAIMREQ.REQ_YEARID = COURSEMASTER.COURSE_YEARID LEFT OUTER JOIN COURSEYEARMASTER ON EDUCLAIMREQ.REQ_COURSEYEARID = COURSEYEARMASTER.COURSEYEAR_ID AND EDUCLAIMREQ.REQ_CMPID = COURSEYEARMASTER.COURSEYEAR_CMPID AND EDUCLAIMREQ.REQ_LOCATIONID = COURSEYEARMASTER.COURSEYEAR_LOCATIONID AND EDUCLAIMREQ.REQ_YEARID = COURSEYEARMASTER.COURSEYEAR_YEARID INNER JOIN RELATIONMASTER ON OFFICERMASTER_DESC.OFFICER_RELATIONID = RELATIONMASTER.RELATION_ID AND OFFICERMASTER_DESC.OFFICER_CMPID = RELATIONMASTER.RELATION_CMPID AND OFFICERMASTER_DESC.OFFICER_locationid = RELATIONMASTER.RELATION_LOCATIONID AND OFFICERMASTER_DESC.OFFICER_yearid = RELATIONMASTER.RELATION_YEARID INNER JOIN RANKMASTER ON OFFICERMASTER.OFFICER_RANKID = RANKMASTER.RANK_ID AND OFFICERMASTER.OFFICER_cmpid = RANKMASTER.RANK_CMPID AND OFFICERMASTER.OFFICER_locationid = RANKMASTER.RANK_LOCATIONID AND OFFICERMASTER.OFFICER_yearid = RANKMASTER.RANK_YEARID INNER JOIN COMPANYMASTER ON OFFICERMASTER.OFFICER_COMPANYID = COMPANYMASTER.COMPANY_ID AND OFFICERMASTER.OFFICER_cmpid = COMPANYMASTER.COMPANY_CMPID AND OFFICERMASTER.OFFICER_locationid = COMPANYMASTER.COMPANY_LOCATIONID AND OFFICERMASTER.OFFICER_yearid = COMPANYMASTER.COMPANY_YEARID INNER JOIN EDUCLAIMREQ_DESC ON EDUCLAIMREQ.REQ_NO = EDUCLAIMREQ_DESC.REQ_NO AND EDUCLAIMREQ.REQ_CMPID = EDUCLAIMREQ_DESC.REQ_CMPID AND EDUCLAIMREQ.REQ_LOCATIONID = EDUCLAIMREQ_DESC.REQ_LOCATIONID AND EDUCLAIMREQ.REQ_YEARID = EDUCLAIMREQ_DESC.REQ_YEARID LEFT OUTER JOIN CATEGORYMASTER ON EDUCLAIMREQ_DESC.REQ_CATEGORYID = CATEGORYMASTER.CATEGORY_ID AND EDUCLAIMREQ_DESC.REQ_CMPID = CATEGORYMASTER.CATEGORY_CMPID AND EDUCLAIMREQ_DESC.REQ_LOCATIONID = CATEGORYMASTER.CATEGORY_LOCATIONID AND EDUCLAIMREQ_DESC.REQ_YEARID = CATEGORYMASTER.CATEGORY_YEARID LEFT OUTER JOIN SENTBYMASTER ON EDUCLAIMREQ.REQ_YEARID = SENTBYMASTER.SENTBY_YEARID AND EDUCLAIMREQ.REQ_LOCATIONID = SENTBYMASTER.SENTBY_LOCATIONID AND EDUCLAIMREQ.REQ_CMPID = SENTBYMASTER.SENTBY_CMPID AND EDUCLAIMREQ.REQ_SENTBYID = SENTBYMASTER.SENTBY_ID LEFT OUTER JOIN VESSELMASTER ON EDUCLAIMREQ.REQ_VESSELID = VESSELMASTER.VESSEL_ID", tepmcondition)
            ElseIf FRMSTRING = "EDUSUPP" Then
                dt = objclsCMST.search(" DISTINCT CAST(0 AS BIT) AS CHK, EDUCLAIMREQ.REQ_NO AS SRNO, EDUCLAIMREQ.REQ_DATE AS REQDATE, EDUCLAIMREQ.REQ_INWARDNO AS INWARDNO, ISNULL(SENTBYMASTER.SENTBY_NAME, '') AS SENTBY, EDUCLAIMREQ.REQ_RECDATE AS RECDATE, OFFICERMASTER.OFFICER_name AS NAME, ISNULL(COMPANYMASTER.COMPANY_NAME, '') AS CMPNAME, RANKMASTER.RANK_NAME AS RANK, OFFICERMASTER.OFFICER_EMPCODE AS EMPCODE, OFFICERMASTER.OFFICER_MUINO AS MUINO, EDUCLAIMREQ.REQ_LEAVEFROM AS LEAVEFROM, EDUCLAIMREQ.REQ_LEAVETO AS LEAVETO, EDUCLAIMREQ.REQ_DOJ AS DOJ, ISNULL(FAMILYMASTER.FAMILY_NAME, '') AS FAMILY, ISNULL(RELATIONMASTER.RELATION_NAME, '') AS RELATION, ISNULL(COURSEMASTER.COURSE_NAME, '') AS COURSE, ISNULL(COURSEYEARMASTER.COURSEYEAR_NAME, '') AS COURSEYEAR,  ISNULL(EDUCLAIMREQ.REQ_INSTNAME, '') AS INSTNAME, ISNULL(EDUCLAIMREQ.REQ_UNIADD, '') AS UNIADD, ISNULL(EDUCLAIMREQ.REQ_UNINAME, '') AS UNINAME, ISNULL(EDUCLAIMREQ.REQ_BANK, '') AS BANK, ISNULL(EDUCLAIMREQ.REQ_BRANCH, '') AS BRANCH, ISNULL(EDUCLAIMREQ.REQ_ACNAME, '') AS ACNAME, ISNULL(EDUCLAIMREQ.REQ_ACNO, '') AS ACNO, ISNULL(EDUCLAIMREQ.REQ_BANKADD, '') AS BANKADD, ISNULL(EDUCLAIMREQ.REQ_REMARKS, '') AS REMARKS, (EDUCLAIMREQ.REQ_CLAIMEDAMT - EDUCLAIMSETTLEMENT.SETTLE_TOTALAMT) AS CLAIMAMT,   EDUCLAIMREQ.REQ_DONE AS DONE, CATEGORYMASTER.CATEGORY_NAME AS CATEGORY,  ISNULL(VESSEL_NAME,'') AS VESSEL, ISNULL(EDUCLAIMREQ.REQ_IFSCCODE,'') AS IFSCCODE ", "", "    EDUCLAIMREQ INNER JOIN OFFICERMASTER ON EDUCLAIMREQ.REQ_OFFICERID = OFFICERMASTER.OFFICER_id AND EDUCLAIMREQ.REQ_CMPID = OFFICERMASTER.OFFICER_cmpid AND EDUCLAIMREQ.REQ_LOCATIONID = OFFICERMASTER.OFFICER_locationid AND EDUCLAIMREQ.REQ_YEARID = OFFICERMASTER.OFFICER_yearid INNER JOIN OFFICERMASTER_DESC ON OFFICERMASTER.OFFICER_cmpid = OFFICERMASTER_DESC.OFFICER_CMPID AND OFFICERMASTER.OFFICER_locationid = OFFICERMASTER_DESC.OFFICER_locationid AND OFFICERMASTER.OFFICER_yearid = OFFICERMASTER_DESC.OFFICER_yearid AND OFFICERMASTER.OFFICER_id = OFFICERMASTER_DESC.OFFICER_ID INNER JOIN FAMILYMASTER ON EDUCLAIMREQ.REQ_FAMILYID = FAMILYMASTER.FAMILY_ID AND OFFICERMASTER_DESC.OFFICER_FAMILYID = FAMILYMASTER.FAMILY_ID AND OFFICERMASTER_DESC.OFFICER_CMPID = FAMILYMASTER.FAMILY_CMPID AND OFFICERMASTER_DESC.OFFICER_locationid = FAMILYMASTER.FAMILY_LOCATIONID AND OFFICERMASTER_DESC.OFFICER_yearid = FAMILYMASTER.FAMILY_YEARID AND EDUCLAIMREQ.REQ_CMPID = FAMILYMASTER.FAMILY_CMPID AND EDUCLAIMREQ.REQ_LOCATIONID = FAMILYMASTER.FAMILY_LOCATIONID AND EDUCLAIMREQ.REQ_YEARID = FAMILYMASTER.FAMILY_YEARID LEFT OUTER JOIN COURSEMASTER ON EDUCLAIMREQ.REQ_COURSEID = COURSEMASTER.COURSE_ID AND EDUCLAIMREQ.REQ_CMPID = COURSEMASTER.COURSE_CMPID AND EDUCLAIMREQ.REQ_LOCATIONID = COURSEMASTER.COURSE_LOCATIONID AND EDUCLAIMREQ.REQ_YEARID = COURSEMASTER.COURSE_YEARID LEFT OUTER JOIN COURSEYEARMASTER ON EDUCLAIMREQ.REQ_COURSEYEARID = COURSEYEARMASTER.COURSEYEAR_ID AND EDUCLAIMREQ.REQ_CMPID = COURSEYEARMASTER.COURSEYEAR_CMPID AND EDUCLAIMREQ.REQ_LOCATIONID = COURSEYEARMASTER.COURSEYEAR_LOCATIONID AND EDUCLAIMREQ.REQ_YEARID = COURSEYEARMASTER.COURSEYEAR_YEARID INNER JOIN RELATIONMASTER ON OFFICERMASTER_DESC.OFFICER_RELATIONID = RELATIONMASTER.RELATION_ID AND OFFICERMASTER_DESC.OFFICER_CMPID = RELATIONMASTER.RELATION_CMPID AND OFFICERMASTER_DESC.OFFICER_locationid = RELATIONMASTER.RELATION_LOCATIONID AND OFFICERMASTER_DESC.OFFICER_yearid = RELATIONMASTER.RELATION_YEARID INNER JOIN RANKMASTER ON OFFICERMASTER.OFFICER_RANKID = RANKMASTER.RANK_ID AND OFFICERMASTER.OFFICER_cmpid = RANKMASTER.RANK_CMPID AND OFFICERMASTER.OFFICER_locationid = RANKMASTER.RANK_LOCATIONID AND OFFICERMASTER.OFFICER_yearid = RANKMASTER.RANK_YEARID INNER JOIN COMPANYMASTER ON OFFICERMASTER.OFFICER_COMPANYID = COMPANYMASTER.COMPANY_ID AND OFFICERMASTER.OFFICER_cmpid = COMPANYMASTER.COMPANY_CMPID AND OFFICERMASTER.OFFICER_locationid = COMPANYMASTER.COMPANY_LOCATIONID AND OFFICERMASTER.OFFICER_yearid = COMPANYMASTER.COMPANY_YEARID INNER JOIN EDUCLAIMREQ_DESC ON EDUCLAIMREQ.REQ_NO = EDUCLAIMREQ_DESC.REQ_NO AND EDUCLAIMREQ.REQ_CMPID = EDUCLAIMREQ_DESC.REQ_CMPID AND EDUCLAIMREQ.REQ_LOCATIONID = EDUCLAIMREQ_DESC.REQ_LOCATIONID AND EDUCLAIMREQ.REQ_YEARID = EDUCLAIMREQ_DESC.REQ_YEARID INNER JOIN EDUCLAIMSETTLEMENT ON EDUCLAIMREQ.REQ_NO = EDUCLAIMSETTLEMENT.SETTLE_REQNO AND EDUCLAIMREQ.REQ_CMPID = EDUCLAIMSETTLEMENT.SETTLE_CMPID AND EDUCLAIMREQ.REQ_LOCATIONID = EDUCLAIMSETTLEMENT.SETTLE_LOCATIONID AND EDUCLAIMREQ.REQ_YEARID = EDUCLAIMSETTLEMENT.SETTLE_YEARID LEFT OUTER JOIN CATEGORYMASTER ON EDUCLAIMREQ_DESC.REQ_CATEGORYID = CATEGORYMASTER.CATEGORY_ID AND EDUCLAIMREQ_DESC.REQ_CMPID = CATEGORYMASTER.CATEGORY_CMPID AND EDUCLAIMREQ_DESC.REQ_LOCATIONID = CATEGORYMASTER.CATEGORY_LOCATIONID AND EDUCLAIMREQ_DESC.REQ_YEARID = CATEGORYMASTER.CATEGORY_YEARID LEFT OUTER JOIN SENTBYMASTER ON EDUCLAIMREQ.REQ_YEARID = SENTBYMASTER.SENTBY_YEARID AND EDUCLAIMREQ.REQ_LOCATIONID = SENTBYMASTER.SENTBY_LOCATIONID AND EDUCLAIMREQ.REQ_CMPID = SENTBYMASTER.SENTBY_CMPID AND EDUCLAIMREQ.REQ_SENTBYID = SENTBYMASTER.SENTBY_ID LEFT OUTER JOIN VESSELMASTER ON EDUCLAIMREQ.REQ_VESSELID = VESSELMASTER.VESSEL_ID", tepmcondition)
            End If
            If dt.Rows.Count > 0 Then
                gridbilldetails.DataSource = dt
                gridbill.FocusedRowHandle = gridbill.RowCount - 1
                gridbill.TopRowIndex = gridbill.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub cmdok_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CMDOK.Click
        Try
            If FRMSTRING = "MEDICAL" Or FRMSTRING = "MEDSUPP" Then
                DT.Columns.Add("REQNO")
                DT.Columns.Add("REQDATE")
                DT.Columns.Add("NAME")
                DT.Columns.Add("FAMILY")
                DT.Columns.Add("RELATION")
                DT.Columns.Add("CATEGORY")
                DT.Columns.Add("DIAGNOSIS")
                DT.Columns.Add("HOSPNAME")
                DT.Columns.Add("HOSPADD")
                DT.Columns.Add("DRNAME")
                DT.Columns.Add("VESSEL")
                DT.Columns.Add("RANK")
                DT.Columns.Add("MUINO")
                DT.Columns.Add("CMPNAME")
                DT.Columns.Add("ACNAME")
                DT.Columns.Add("ACNO")
                DT.Columns.Add("BANK")
                DT.Columns.Add("BRANCH")
                DT.Columns.Add("BANKADD")
                DT.Columns.Add("IFSCCODE")
                DT.Columns.Add("AUTHOFROM")
                DT.Columns.Add("AUTHOTO")
                DT.Columns.Add("ILLFROM")
                DT.Columns.Add("ILLTO")

                For i As Integer = 0 To gridbill.RowCount - 1
                    Dim dtrow As DataRow = gridbill.GetDataRow(i)
                    If Convert.ToBoolean(dtrow("CHK")) = True Then
                        DT.Rows.Add(dtrow("SRNO"), dtrow("REQDATE"), dtrow("NAME"), dtrow("FAMILY"), dtrow("RELATION"), dtrow("CATEGORY"), dtrow("DIAGNOSIS"), dtrow("HOSPNAME"), dtrow("HOSPADD"), dtrow("DRNAME"), dtrow("VESSEL"), dtrow("RANK"), dtrow("MUINO"), dtrow("CMPNAME"), dtrow("ACNAME"), dtrow("ACNO"), dtrow("BANK"), dtrow("BRANCH"), dtrow("BANKADD"), dtrow("IFSCCODE"), dtrow("AUTHOFROM"), dtrow("AUTHOTO"), dtrow("ILLFROM"), dtrow("ILLTO"))
                    End If
                Next
            Else
                DT.Columns.Add("REQNO")
                DT.Columns.Add("REQDATE")
                DT.Columns.Add("NAME")
                DT.Columns.Add("FAMILY")
                DT.Columns.Add("RELATION")
                DT.Columns.Add("CATEGORY")
                DT.Columns.Add("COURSE")
                DT.Columns.Add("COURSEYEAR")
                DT.Columns.Add("INSTITUTE")
                DT.Columns.Add("UNIVERSITY")
                DT.Columns.Add("UNIADD")
                DT.Columns.Add("VESSEL")
                DT.Columns.Add("RANK")
                DT.Columns.Add("MUINO")
                DT.Columns.Add("CMPNAME")
                DT.Columns.Add("ACNAME")
                DT.Columns.Add("ACNO")
                DT.Columns.Add("BANK")
                DT.Columns.Add("BRANCH")
                DT.Columns.Add("BANKADD")
                DT.Columns.Add("IFSCCODE")

                For i As Integer = 0 To gridbill.RowCount - 1
                    Dim dtrow As DataRow = gridbill.GetDataRow(i)
                    If Convert.ToBoolean(dtrow("CHK")) = True Then
                        DT.Rows.Add(dtrow("SRNO"), dtrow("REQDATE"), dtrow("NAME"), dtrow("FAMILY"), dtrow("RELATION"), dtrow("CATEGORY"), dtrow("COURSE"), dtrow("COURSEYEAR"), dtrow("INSTNAME"), dtrow("UNINAME"), dtrow("UNIADD"), dtrow("VESSEL"), dtrow("RANK"), dtrow("MUINO"), dtrow("CMPNAME"), dtrow("ACNAME"), dtrow("ACNO"), dtrow("BANK"), dtrow("BRANCH"), dtrow("BANKADD"), dtrow("IFSCCODE"))
                    End If
                Next
            End If
            Me.Close()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub gridbill_InvalidRowException(ByVal sender As Object, ByVal e As DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs) Handles gridbill.InvalidRowException
        Try
            e.ErrorText = "Only 1 row can be selected at a time"
            e.ExceptionMode = DevExpress.XtraEditors.Controls.ExceptionMode.DisplayError
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub gridbill_ValidateRow(ByVal sender As Object, ByVal e As DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs) Handles gridbill.ValidateRow
        Try

LINE1:
            If ROW = 0 Then
                For I As Integer = 0 To gridbill.RowCount - 1
                    Dim dtrow As DataRow = gridbill.GetDataRow(I)
                    If Convert.ToBoolean(dtrow("CHK")) = True Then
                        ROW = I
                        Exit For
                    End If
                Next
            Else
                Dim dtrow As DataRow = gridbill.GetDataRow(ROW)
                If Convert.ToBoolean(dtrow("CHK")) = False Then
                    ROW = 0
                    GoTo LINE1
                End If
            End If

            If Convert.ToBoolean(gridbill.GetFocusedRowCellValue("CHK")) = True And e.RowHandle <> ROW Then
                e.Valid = False
                gridbill.SetColumnError(gridbill.Columns("CHK"), "Only 1 row can be selected at a time", DevExpress.XtraEditors.DXErrorProvider.ErrorType.Critical)
            ElseIf Convert.ToBoolean(gridbill.GetFocusedRowCellValue("CHK")) = False And e.RowHandle = ROW Then
                ROW = 0
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

End Class